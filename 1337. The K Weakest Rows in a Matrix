class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int[] weakest=new int[mat.length];
        int[] ans=new int[k];
        int x=0;
        for(int[] i:mat){
            weakest[x]=countOne(i);
            x++;
        }
        int low=0;
        for(int i=0;i<ans.length;i++){
            int min=Integer.MAX_VALUE;
            for(int j=0;j<weakest.length;j++){
                if(min>weakest[j]){
                    low=j;
                    min=weakest[j];
                }
            }
            weakest[low]=Integer.MAX_VALUE;
            ans[i]=low;
        }
        return ans;
    }
    public int countOne(int[] arr){
        int count=0;
        int i=0;
        while(arr[i]!=0){
            count++;
            i++;
            if(i==arr.length){
                break;
            }
        }
        return count;
    }
}
