class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        boolean ans=true;
        if(flowerbed.length==1){
            if(flowerbed[0]!=0 && n==1){
                return false;
            }else if(flowerbed[0]==0 && n==1){
                return true;
            }
        }
        if(flowerbed.length<n){
            return false;
        }
        if(n!=0){
            for(int i=0;i<flowerbed.length;i++){
                if(flowerbed[i]==0){
                    flowerbed[i]=1;
                    if(i==0){
                        if(flowerbed[i+1]!=1){
                            ans=true;
                            return ans && canPlaceFlowers(flowerbed,n-1);
                        }else{
                            flowerbed[i]=0;
                            ans=false;
                        }
                    }else if(i==flowerbed.length-1){
                        if(flowerbed[i-1]!=1){
                            ans=true;
                            return ans && canPlaceFlowers(flowerbed,n-1);
                        }else{
                            flowerbed[i]=0;
                            ans=false;
                        }
                    }else{
                        if(flowerbed[i+1]!=1 && flowerbed[i-1]!=1){
                            ans=true;
                            return ans && canPlaceFlowers(flowerbed,n-1);
                        }else{
                            flowerbed[i]=0;
                            ans=false;
                        }
                    }
                }
            }
        }
        return ans;
    }
}
