/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middle(ListNode head){
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public ListNode reverse(ListNode head){
        if(head==null){
            return head;
        }
        ListNode prev=null;
        ListNode pres=head;
        ListNode next=pres.next;
        while(pres!=null){
            pres.next=prev;
            prev=pres;
            pres=next;
            if(next!=null){
                next=next.next;
            }
        }
        return prev;
    }

    public void reorderList(ListNode head) {
        ListNode mid=middle(head);
        ListNode s=head;
        ListNode e=reverse(mid);  
        while(s!=null && e!=null){
            ListNode temp=s.next;
            s.next=e;
            s=temp;
            temp=e.next;
            e.next=s;
            e=temp;
        }
            if(s!=null){
                s.next=null;
            }
        
        
    }
}
